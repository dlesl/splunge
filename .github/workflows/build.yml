name: build

on:
  push:
    branches:
      - master
  release:
    types:
      - created

jobs:
  jar:
    runs-on: ubuntu-18.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Cache deps
        uses: actions/cache@v1
        id: cache-deps
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('deps.edn') }}
          restore-keys: |
                ${{ runner.os }}-maven-

      - name: Prepare java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.7
        with:
          cli: 1.10.3.1058

      - name: Build jar
        run: |
          make target/splunge-standalone.jar

      - uses: actions/upload-artifact@v2
        with:
          name: jar
          path: target/splunge-standalone.jar

      - uses: actions/upload-release-asset@v1
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/splunge-standalone.jar
          asset_name: splunge-standalone.jar
          asset_content_type: application/java-archive

  linux:
    runs-on: ubuntu-18.04
    needs: [jar]
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: '21.3.0'
          java: 'java17'
          arch: 'amd64'

      - name: Install native-image component
        run: |
          gu install native-image

      - uses: actions/download-artifact@v2
        with:
          name: jar
          path: target/

      - name: Build native image
        run: |
          make target/splunge

      - name: Build zip
        run: |
          zip -j splunge.zip target/splunge

      - uses: actions/upload-release-asset@v1
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./splunge.zip
          asset_name: splunge-linux-amd64.zip
          asset_content_type: application/zip

  mac:
    runs-on: macos-10.15
    needs: [jar]
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: '21.3.0'
          java: 'java17'
          arch: 'amd64'

      - name: Install native-image component
        run: |
          gu install native-image

      - uses: actions/download-artifact@v2
        with:
          name: jar
          path: target/

      - name: Build native image
        run: |
          make target/splunge

      - name: Build zip
        run: |
          zip -j splunge.zip target/splunge

      - uses: actions/upload-release-asset@v1
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./splunge.zip
          asset_name: splunge-macos-amd64.zip
          asset_content_type: application/zip

  windows:
    runs-on: windows-2019
    needs: [jar]
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: '21.3.0'
          java: 'java11' # 17 doesn't seem to work on windows
          arch: 'amd64'

      - name: Install native-image component
        run: |
          gu.cmd install native-image

      - uses: actions/download-artifact@v2
        with:
          name: jar
          path: target/

      - name: Add MSVC tools to PATH
        uses: ilammy/msvc-dev-cmd@v1.10.0

      - name: Build native image
        run: |
          make target/splunge

      - name: Build zip
        run: |
          Compress-Archive -Path target\splunge.exe -DestinationPath splunge.zip

      - uses: actions/upload-release-asset@v1
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./splunge.zip
          asset_name: splunge-windows-amd64.zip
          asset_content_type: application/zip
